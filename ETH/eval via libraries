---
title: "Joe's Version: Library approach"
author: "Connolly, Gatica, and Reeves"
date: "5/13/2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

### The Premise

We want to predict the performance of Ethereum against USD using historical data.  Generally, this practice is frowned upon because each new trading day changes the business cycles that produce following rates.  However, for the sake of this assignment, instead of using regressors, we are going to try to create a model based on categorization and feature engineering.

Our data is a bit rough, with only daily readings of Open, High, Low, Close, Volume, (OHLC) and Block Size.  Finer-grain data is a bit expensive.

Instead of predicting an exact exchange rate, we will simply try to determine if the following week from any data point is bullish (significantly increasing) or bearish (significantly decreasing).

```{r, include=FALSE}
library(tidyverse)
library(tidymodels)
library(zoo)
library(smooth)
library(TTR)
library(quantmod)
library(lessR)
library(tibble)
library(ggplot2)
```

```{r, include=FALSE}

data <- "https://raw.githubusercontent.com/TheWerefriend/data607Final/main/ETH-USD.csv?token=ABHMHAW73NPSXIQ5M2ALXR3AU6LYE" %>%
  read.csv(header = TRUE) %>%
  tibble() %>%
  mutate(Date = as.Date(Date, format = "%Y-%m-%d"))

data <- data[, -6] %>%
  mutate(Open = as.numeric(as.character(Open))) %>%
  mutate(High = as.numeric(as.character(High))) %>%
  mutate(Low = as.numeric(as.character(Low))) %>%
  mutate(Close = as.numeric(as.character(Close))) %>%
  mutate(Volume = as.numeric(as.character(Volume))) %>%
  na.locf()
```

```{r, include=FALSE}
period <- 9

data <- data %>%
  arrange(Date) %>%
  mutate(Momentum = 100 * (Volume - lag(Volume, 
                                        n = period,
                                        order_by = Date)))
```


The next feature will be MACD (Moving Average Convergence/Divergence), which shows differences between exponential moving averages of two different periods.  If momentum is significant, this feature will tell us what direction the price is moving.

```{r, include=FALSE}
date <- data$Date
Date_final <- as.data.frame(date)
month_year <- format(Date_final, "%m.%y")
monthly <- as.data.frame(month_year)
as.character(monthly$date)
str(monthly)
```

```{r}
Volume <- data$Volume
macd <- MACD(Volume,nFast=12,nSlow=26,nSig=9)
macd_df <- as.data.frame(macd)
```

Converting list into dataframe
```{r}
macd_df_historic <- merge(macd_df, monthly)
names(macd_df_historic) <- c("Moving_Average", "Stochastic_Indicators", "Month_Year")
macd_df_historic[is.na(macd_df_historic)] = 0
head(macd_df_historic,200)
```

Obtaining Sample datasets; "Month.Year" format
```{r}
August_17 <- macd_df_historic %>%
  filter(Month_Year == "08.17")

June_18 <- macd_df_historic %>% 
  filter(Month_Year == "06.18")

July_19 <- macd_df_historic %>%
  filter(Month_Year == "07.19")

head(August_17, 200)
head(June_18, 200)
head(July_19, 200)
```

## Candlestick Chart
By using plotly, an interactice plotting library, it's possible to chart financial data such as ours. 

Source: https://plotly.com/r/candlestick-charts/
```{r}
data_cs <- as.data.frame(data)

cs <- data_cs %>% plot_ly(x = ~Date, type = "candlestick",
                          open = ~Open, close = ~Close,
                          high = ~High, low = ~Low)
cs <- cs %>% layout(title = "Near all-time $Eth Candlestick Chart")
cs
```
